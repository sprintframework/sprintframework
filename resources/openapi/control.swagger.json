{
  "swagger": "2.0",
  "info": {
    "title": "ControlService",
    "version": "1.0",
    "contact": {
      "name": "ControlService",
      "url": "https://github.com/sprintframework/sprintframework",
      "email": "zander@schwid.com"
    }
  },
  "tags": [
    {
      "name": "ControlService"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "application/octet-stream"
  ],
  "produces": [
    "application/json",
    "application/octet-stream"
  ],
  "paths": {
    "/api/v1/certificate": {
      "put": {
        "summary": "Certificate management commands",
        "operationId": "ControlService_Certificate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodeCommandResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nodeCommand"
            }
          }
        ],
        "tags": [
          "ControlService"
        ]
      }
    },
    "/api/v1/config": {
      "put": {
        "summary": "Config management commands",
        "operationId": "ControlService_Config",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodeCommandResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nodeCommand"
            }
          }
        ],
        "tags": [
          "ControlService"
        ]
      }
    },
    "/api/v1/job": {
      "put": {
        "summary": "Job commands",
        "operationId": "ControlService_Job",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodeCommandResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nodeCommand"
            }
          }
        ],
        "tags": [
          "ControlService"
        ]
      }
    },
    "/api/v1/node": {
      "put": {
        "summary": "Node management commands",
        "operationId": "ControlService_Node",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodeCommandResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nodeCommand"
            }
          }
        ],
        "tags": [
          "ControlService"
        ]
      }
    },
    "/api/v1/status": {
      "get": {
        "summary": "Gets status info",
        "operationId": "ControlService_Status",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodeStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ControlService"
        ]
      }
    },
    "/api/v1/storage": {
      "put": {
        "summary": "Storage management commands",
        "operationId": "ControlService_Storage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodeCommandResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nodeCommand"
            }
          }
        ],
        "tags": [
          "ControlService"
        ]
      }
    },
    "/api/v1/storage/console": {
      "put": {
        "summary": "Storage console",
        "operationId": "ControlService_StorageConsole",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/nodeStorageConsoleResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of nodeStorageConsoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nodeStorageConsoleRequest"
            }
          }
        ],
        "tags": [
          "ControlService"
        ]
      }
    }
  },
  "definitions": {
    "nodeCommand": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "nodeCommandResult": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "nodeStatusResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "nodeStorageConsoleRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "nodeStorageConsoleResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
